-- Expression evaluator

import List;
import State;


public fun evalBinOp (op, a, b) {
  case op of
    "+"  -> a + b
    | "-"  -> a - b
    | "*"  -> a * b
    | "/"  -> a / b
    | "%"  -> a % b
    | "==" -> a == b
    | "!=" -> a != b
    | "<"  -> a < b
    | ">"  -> a > b
    | "<=" -> a <= b
    | ">=" -> a >= b
    | "&&" -> a && b
    | "!!" -> a !! b
    | _    -> failure ("Unknown operator '%s'\n", op)
  esac
}

public fun evalExpr (st, expr) {
  case expr of
    Var (s) -> st (s)
    | Const (i) -> i
    | Binop (op, a, b) -> evalBinOp (op, evalExpr(st, a), evalExpr(st, b))
  esac
}